\\学習のポイントまとめ（復習用）

HTML&CSSでWebサイトを作る
・HTMLの役割と基本的な概念を理解する
・よく使われるHTMLタグとその役割を把握する
・HTMLタグの調べ方を覚える
・HTMLの基本構成を理解し、簡単なWebページの構造を把握する
・Webページのレイアウト構造について理解する
・よくあるレイアウト構造を把握する
・使用するHTMLタグについて理解する
・HTMLとCSSの関係性を理解する
・CSSの基本的な書き方を習得する
・様々なCSSの呼び出し方法を学ぶ
・CSSプロパティの使い方を身につける
・CSSセレクタの使い方をマスターする
・CSSフレームワークとは何かを理解する
・Tailwind CSSの基本的な使い方を学ぶ
・HTML、CSS、CSSフレームワークを組み合わせたWebページ制作方法を理解する
・レイアウト作成の基本的な手法を理解する
・CSSフレームワークを活用したスタイリングの方法を理解する
・プロフィールページのような実践的なWebページの構成要素を理解する

JavaScriptでWebサイトを動かそう
・JavaScriptの基本的な概念
・JavaScriptの書き方のイメージ
・JavaScriptを書く際の注意点
・JavaScriptをWebページに組み込む方法
・JavaScriptの基本的な文法
・関数とは
・DOMについて
・イベントとは
・デバッグ方法
・今まで学んだJavaScriptの知識の復習
・イベント駆動のプログラミング方法
・アルゴリズムの考え方
・配列の使い方
・クライアントサイドWebAPIについて
・様々なWebAPIを用いたWebページの表現方法

データベース・SQL導入
・データベースの概要
・SQLの概要
・SELECT文の基本構造
・FROM句を使ったテーブル指定
・WHERE句を使った条件指定
・データを追加するINSERT文
・データを更新するUPDATE文
・データを削除するDELETE文
・JOIN文を使って複数のテーブルを結合する方法
・GROUP BY句を使ってデータをグループ化する方法
・様々な集計関数


コマンドラインでコンピュータと対話する
・コンピューターの仕組み
・ファイルとディレクトリの概念
・コマンドラインを使ったコンピューターの操作

Gitで簡単履歴管理
・Gitとは何か
・Gitを用いた開発フロー
・Gitを使うための準備

Rubyで学ぶプログラミング
・Rubyというプログラミング言語について理解していること
・Rubyの実行環境構築方法を理解していること
・プログラミング学習における効果的な学習方法を理解していること
・Rubyで「Hello World」プログラムを作成できるようになっていること
・Rubyのプログラムを実行する複数の方法を理解していること
・putsメソッドを使って標準出力ができるようになっていること
・関数（メソッド）を定義して呼び出すことができるようになっていること
・関数とは何かを理解できていること
・関数の定義方法と呼び出し方を理解できていること
・引数と戻り値の概念を理解できていること
・putsとreturnの違いを理解できていること
・Hello Worldを関数で実行できていること
・関数を使ったプログラムの書き方が理解できていること
・算術演算子の使い方が理解できていること
・2つの引数を受け取る関数を作成できること
・消費税込みの合計金額を計算するプログラムが作成できること
・配列を使ったプログラムの書き方ができるようになること
・繰り返し処理の書き方ができるようになること
・繰り返し処理の中で値を扱う方法を理解していること
・配列を使った合計金額計算プログラムが作成できること
・ハッシュの基本的な使い方が理解できていること
・ハッシュから値を取り出す方法が理解できていること
・ハッシュが入った配列を扱えるようになっていること
・実用的なレジプログラムが作成できるようになっていること

Sinatraで学ぶWebアプリケーション開発
・Webアプリケーション開発の基本概念
・今回のカリキュラムで使用する環境の構築手順
・アプリケーションのセットアップ方法
・今回のアプリケーションのディレクトリ構造と役割
・ルーティングの仕組み
・viewとERB
・自動レビュー課題の復習
・Sinatraでデータベースを扱う方法
・データベースのデータメンテナンス方法
・Sinatraでデータを追加する方法
・追加したデータを表示する方法
・様々なデータの取得・表示方法

Ruby入門
・Rubyプログラムの基本的な書き方を理解していること
・Rubyプログラムの実行方法を理解していること
・変数とは何かを理解し、値を代入できるようになっていること
・式展開の書き方を理解し、実際に使えるようになっていること
・irbを使ってRubyのプログラムを実行できるようになっていること
・if を使った条件分岐を理解し、実装できるようになること
・else 節の使い方を理解し、適切に活用できるようになること
・&&（AND）や ||（OR）の論理演算子を理解し、複雑な条件を書けるようになること
・times メソッドや while を使った繰り返し処理を理解し、実装できるようになること
・配列の概念と基本的な書き方を理解していること
・eachメソッドを使用した繰り返し処理ができること
・break、nextステートメントの挙動を理解し、適切に使い分けができること
・配列の基本的なメソッド（push、pop、shift、unshiftなど）を理解していること
・配列を検索・抽出するメソッド（find、select、rejectなど）を使えること
・配列を変換するメソッド（map、collectなど）を理解していること
・配列の要素を確認するメソッド（include?、empty?など）を使えること
・ハッシュとはどのようなもので、どういった書き方をするかを理解していること
・配列とハッシュの違いを説明できること
・ハッシュから値を取得する方法を理解していること
・ハッシュを繰り返し処理する方法を理解していること
・メソッドの定義と呼び出し方法を理解していること
・引数の概念と使い方を理解していること
・デフォルト値とキーワード引数の使い方を身につけていること
・スコープの概念を理解していること
・メソッドを活用してプログラムをまとまりよく整理できるようになっていること
・クラスの定義方法を理解し、実際にクラスを作成できるようになっていること
・インスタンス変数とインスタンスメソッドの使い方を理解していること
・クラスメソッドとインスタンスメソッドの違いを説明できるようになっていること
・継承の概念を理解し、親クラスから子クラスを作成できるようになっていること
・privateメソッドの概念と使用方法を理解していること
・モジュールの基本的な定義方法を理解していること
・includeとextendの違いを理解し、適切に使い分けられること
・モジュールとクラスの違いを説明できること
・実際のコードでモジュールを使って機能を整理できること
・リクエストとは何かを理解している
・レスポンスとは何かを理解している
・HTTPメソッドの基本的な概念を理解している
・簡単なWebアプリケーションを作成できる
・Webアプリケーションの動作の流れをイメージできる
・例外とは何かを理解し、説明できるようになっていること
・rescueを使って例外が発生した際の処理を記述できるようになっていること
・正規表現の基本概念を理解し、簡単なパターンマッチングができるようになっていること

Web技術入門
・APIとは、どのような役割を果たすものでしょうか？
・HTTPとは、何の略称でしょうか？
・HTTPは主にどのような用途で使用されるプロトコルでしょうか？
・静的ページと動的ページの違いは何ですか？
・HTTPリクエストは、どのような要素で構成されていますか？
・HTTPの各要素の役割はどのようなものですか？
・「GET, POST, PUT, DELETE」などのメソッドを総称してなんと呼びますか？
・GETメソッドとPOSTメソッドの使用方法には通常どのような違いがありますか？
・ステータスコード200番台、300番台、400番台、500番台はそれぞれ通常どのような意味を表しますか？
・ステートフルとはどのようなものですか？
・ステートレスとはどのようなものですか？
・ステートフルとステートレスはどのような違いがありますか？
・Cookieとはどのようなもので、どのような用途で使用されますか？
・セッションとはどのようなもので、どのような用途で使用されますか？
・HTTPSの特徴にはどのようなものがありますか？
・HTML文書はどのような構造になっていますか？
・JPEG、GIF、PNGのそれぞれの特徴と違いは何ですか？
・DOMとはどのようなものですか？
・DOMの基本的な構造はどのようになっていますか？
・JSONはどのような特徴がありますか？
・エンコードとはどのようなものですか？
・デコードとはどのようなものですか？
・Webアプリケーションの3層アーキテクチャとはどのようなものですか？
・Webアプリケーションの3層アーキテクチャの各層の役割はどのようなものですか？
・MVCモデルとはどのような特徴がありますか？
・MVCモデルと3層アーキテクチャにはどのような違いがありますか？
・Webサーバーの主な役割は何ですか？
・アプリケーションサーバーの主な役割は何ですか？
・DBMSとは何を指す言葉で、どのような役割を担っていますか？
・Ajaxとはどのような特徴を持つ技術ですか？
・情報セキュリティの3要素とは何ですか？
・情報セキュリティの3要素はそれぞれどのようなものですか？
・ブルートフォース攻撃とはどのような方法で行われる攻撃ですか？
・セッションハイジャックとはどのような方法で行われる攻撃ですか？
・XSS（クロスサイトスクリプティング）とはどのような方法で行われる攻撃ですか？
・CSRF（クロスサイトリクエストフォージェリ）とはどのような方法で行われる攻撃ですか？
・SQLインジェクションとはどのような方法で行われる攻撃ですか？
・暗号化とはデータに対してどのような操作を行うものですか？
・認証とはどのような目的で行われるものですか？
・認可とはどのようなものですか？
・認証と認可はどのような違いがありますか？

JavaScript入門
・JSをWebブラウザで確認するための準備
・JSで何ができるのかを知る
・開発者ツールの使い方を学ぶ
・JavaScriptデバッガーの機能を知る
・JavaScriptコンソールの使用方法を学ぶ
・DOMとは何かを知る
・DOM操作ができるようになる
・JSのイベントとは何か
・イベントを扱う方法を知る
・JSでの関数とは何か
・関数の扱い方を知る

データベース・SQL基礎
・データベースを導入することでどんな問題を解消できますか？
・nullとはどのような値ですか？
・テーブルとはどのようなものですか？
・リレーショナルデータベースでカラムとはどのようなものですか？
・正規化とはどのようなものですか？
・トランザクションとはどのようなものですか？
・コミットとはどのような処理ですか？
・ロールバックとはどのような処理ですか？
・インデックスとはどのようなものですか？
・データベース言語SQL(Structured Query Language)はどのようなことができますか？
・データを取得する際にはどのような句を使いますか？
・データを挿入する際にはどのような句を使いますか？
・データを更新する際にはどのような句を使いますか？
・データを削除する際にはどのような句を使いますか？
・テーブルを結合する際にはどのような句を使いますか？

JavaScript基礎
・準備されているpluginを利用することで自分で1からコードを書かずに機能を実装することができる
・同期通信と非同期通信という通信方法がある
・JavaScriptで要素を変化させることが出来る
・Promisewは複数の処理を並列で走らせることができないJavaScriptに、「状態」という変数を持たせることで同期処理のような仕組みを実現できる

rails基礎
・rails g コマンドで生成されるファイル
・rails g コマンドで生成されるファイルを制御する設定方法
・rails g コマンドで生成されるファイルを制御する必要性
RSpec入門
・system specとは何か
・capybaraの使い方
・処理の共通化