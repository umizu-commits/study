概要
実装途中となっているspec/system/task_spec.rbを修正してください。

各テストケースに修正内容をコメントしています。

・FIXME --> テストが失敗するので、成功するよう修正をお願いします。
・TODO --> テストは成功しますが、記載事項に沿ってリファクタリングしてください。
環境構築
リポジトリをfork
git cloneしてcd rspec_app_examで移動
修正用ブランチをgit checkout -b fix_testcodeで作成
docker compose build, docker compose upコマンドを実行
specファイルを修正して、テスト実行（docker compose upコマンドを実行しているターミナルとは別ターミナルを開いて docker compose exec web bundle exec rspecコマンドを実行）
備考
・失敗するテストケースは実行時にPendingになるようxitにしています。xitをitに変更してテストコードを修正してください。

・itをfitにするとspec実行時にそのテストケースのみ実行するようfocusしてくれます。またspecファイルではbyebugも使用できます。 ※ 詳しくはspec/spec_helper.rbを確認してください。

・.rspec という設定ファイルに --format documentation を設定しているため、spec実行時に describeやit以下の文字列をコンソールに表示させています。

FIXMEのヒント
・it 'Project詳細からTask一覧ページにアクセスした場合、Taskが表示されること' は、まず何が起きているかを整理し、何故テストが失敗するかを考えてください。（一旦後回しにしても良いです。）

・it 'Taskを編集した場合、一覧画面で編集後の内容が表示されること' はテスト対象のコードも併せて確認した方が良いと思います。

・it 'Taskが削除されること' は削除処理自体が成功しているかどうかなど、問題の切り分けを行ってください。原因が判明した場合、画面や他のテストケースを手がかりにして修正してください。

原因調査時のヒント
・page.bodyをbyebugで実行してください

・テスト失敗時にはtmp/screenshotsフォルダ以下に画面キャプチャが保存され、確認することが出来ます。（このフォルダはgit ignoreされています。）

進め方の注意
修正の際には、適切な単位でコミットを分ける練習をしてみましょう！コミットメッセージは以下のURLを参考にしてください！ https://www.tam-tam.co.jp/tipsnote/program/post16686.html
注意点
cloneする前に、forkしたかどうかを確認しましょう。
pushする前に、作業ブランチをcheckoutしているかを確認しましょう。
PRを作成する際は、forkしたリポジトリに対してPRを作成できているかを確認しましょう。
課題に記載されている注意事項は、漏れなく確認しましょう。
※このアプリはDockerを使用しているため、コマンドはDockerを使用したもので進めてください。