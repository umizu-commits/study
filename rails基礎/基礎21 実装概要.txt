概要
次の課題で管理画面を実装するために、本課題では以下を実装してください。

■ 管理者ユーザーと一般ユーザーを分ける
Users テーブルに role カラム（integer 型）を新たに設けてください。
role カラムの値が 0 であれば general（一般）、 1 であれば admin（管理者）となるようにしてください。
■ 管理画面用のログイン機能実装
管理画面のログインページのレイアウトページは、app/views/layouts/admin_login.html.erb を使用すること。
管理画面にログインした後のレイアウトページは、app/views/admin/layouts/application.html.erb を使用すること。
■ 管理画面へログインした後のダッシュボードページ実装
権限が管理者では無いユーザーがログインを試みた場合、一般のログイン画面へリダイレクトされること。
管理画面のヘッダー・フッター・サイドバーは指定のものを使用すること。
■ ルーティング
管理画面は /admin をルートとすること。


調査
・roleカラムでのroleを0と1で管理する方法
＞enumを使う
・管理者用のログイン機能実装方法
＞管理者専用のルート、コントローラ、ビュー、レイアウトを作成
・ダッシュボードとは
＞ウェブサイトの分析データ、広告掲載結果、ユーザー情報など、複数のデータや情報を収集・集約し、グラフや表などで視覚的に分かりやすく表示するウェブベースのインターフェース
＞リアルタイムで更新される。データの可視化/情報の一元化/リアルタイムでの把握/迅速な意思決定の支援/情報共有の促進
・サイドバーの実装方法
＞class="sidebar"

今回の課題で行わなければならないことを書き出す。
・userテーブルにroleカラム（integer型）を追加
・roleカラムの値によって一般ユーザーか管理ユーザーかを設定
・管理画面用のログイン機能実装
・管理画面にダッシュボードページの実装
・権限の無いユーザーがダッシュボードにアクセスを試みた際、一般のログイン画面へリダイレクトされる
・管理画面のヘッダー・フッター・サイドバーは指定のものを使用


調査結果と概要から何を行う必要があるかを大まかにイメージする。
・マイグレーションでUserテーブルにroleカラムを追加
＞docker compose exec web rails g migration AddRoleToUsers role:integer
・roleを0と1で一般と管理者となるよう管理
・管理者用ページはすべて/admin以下にまとめる
＞ルーティングで namespace :admin を使って、管理用コントローラやビューをグループ化するのが一般的
・ダッシュボードについても、同様にadmin以下になるようにまとめる
・ダッシュボードにヘッダー、フッター、サイドバーの実装

調べた内容も含めての実装イメージを紙に書き出す。